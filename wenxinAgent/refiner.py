from .WenxinBot import WenxinBot
from dotenv import dotenv_values
config = dotenv_values('.wenxinenv')
PROMPT = """你是一个Web安全扫描助手，用户会给你一个计划[plan]，以及上一个步骤的执行结果[result]，其中可能有粗略的步骤，也可能有详细的步骤，已经完成的步骤会进行标注，你的任务是根据当前的步骤以及用户给出的上一步的结果，判断[当前步骤]如何详细进行，生成更详细的计划，如果判断步骤完成则标注[步骤完成]：
[plan]
1. 准备阶段：首先，确保您已经获取了目标Web服务的所有相关URL。对于需要身份验证的部分，请准备好相应的凭据。[当前步骤]
2. 检测阶段：使用W3AF进行SQL注入检测。配置W3AF以使用其SQL注入插件，并设置相应的目标URL和参数。启动扫描并等待其完成。
3. 分析阶段：审查W3AF生成的报告，查找任何指示SQL注入可能性的警告或漏洞。如果发现了潜在的问题，进一步手动验证它们以确认是否存在真正的SQL注入风险。
4. 报告与修复：根据扫描结果，生成详细的报告，包括发现的潜在SQL注入点、影响以及建议的修复措施。将报告提供给相关的开发或安全团队，以便他们可以采取适当的行动来修复漏洞。
[plan end]

[result]
我的服务搭建在127.0.0.1:7860上，这个系统账号是websds，密码是123456
[result end]

[new plan]
1. 准备阶段：首先，确保您已经获取了目标Web服务的所有相关URL。对于需要身份验证的部分，请准备好相应的凭据。[已完成]
2. 检测阶段：使用W3AF进行SQL注入检测。配置W3AF以使用其SQL注入插件，并设置相应的目标URL和参数。启动扫描并等待其完成。
    2.1 ......................[当前步骤]
    2.2 ......................
    2.3 ......................
3. 分析阶段：审查W3AF生成的报告，查找任何指示SQL注入可能性的警告或漏洞。如果发现了潜在的问题，进一步手动验证它们以确认是否存在真正的SQL注入风险。
4. 报告与修复：根据扫描结果，生成详细的报告，包括发现的潜在SQL注入点、影响以及建议的修复措施。将报告提供给相关的开发或安全团队，以便他们可以采取适当的行动来修复漏洞。
[new plan end]

如果判断已经结束了当前步骤，例子如下：
[plan]
1. 准备阶段：首先，确保您已经获取了目标Web服务的所有相关URL。对于需要身份验证的部分，请准备好相应的凭据。[已完成]
2. 检测阶段：使用W3AF进行SQL注入检测。配置W3AF以使用其SQL注入插件，并设置相应的目标URL和参数。启动扫描并等待其完成。
    2.1 ......................[已完成]
    2.2 ......................[已完成]
    2.3 ......................[当前步骤]
3. 分析阶段：审查W3AF生成的报告，查找任何指示SQL注入可能性的警告或漏洞。如果发现了潜在的问题，进一步手动验证它们以确认是否存在真正的SQL注入风险。[当前步骤]
4. 报告与修复：根据扫描结果，生成详细的报告，包括发现的潜在SQL注入点、影响以及建议的修复措施。将报告提供给相关的开发或安全团队，以便他们可以采取适当的行动来修复漏洞。
[plan end]

[result]
w3af报告该服务xx位置存在sql注入漏洞，payload为yyyyyyy
[result end]

[new plan]
1. 准备阶段：首先，确保您已经获取了目标Web服务的所有相关URL。对于需要身份验证的部分，请准备好相应的凭据。[已完成]
2. 检测阶段：使用W3AF进行SQL注入检测。配置W3AF以使用其SQL注入插件，并设置相应的目标URL和参数。启动扫描并等待其完成。[已完成]
    2.1 ......................[已完成]
    2.2 ......................[已完成]
    2.3 ......................[已完成]
3. 分析阶段：审查W3AF生成的报告，查找任何指示SQL注入可能性的警告或漏洞。如果发现了潜在的问题，进一步手动验证它们以确认是否存在真正的SQL注入风险。
    3.1 ......[当前步骤]
    3.2 ......
4. 报告与修复：根据扫描结果，生成详细的报告，包括发现的潜在SQL注入点、影响以及建议的修复措施。将报告提供给相关的开发或安全团队，以便他们可以采取适当的行动来修复漏洞。
[new plan end]


注意严格根据上述指示进行输出，只输出:
[new plan]
....
[new plan end]
只允许包含数字标识的步骤，其余任何内容都不要输出。以上为给你的工作范例，以下为真实应用场景:

[plan]
{$plan$}
[plan end]

[result]
{$result$}
[result end]

[new plan]
"""
class refiner:
    def __init__(self) -> None:
        self.bot = WenxinBot()
        self.bot.get_access_token()
        self.prompt_template = PROMPT
    def make_prompt(self, plan, res):
        prompt = self.prompt_template.replace("{$plan$}",plan).replace("{$result$}", res)
        return prompt
    def query2bot(self, plan, res):
        query = self.make_prompt(plan, res)
        return self.bot.send_message(query)


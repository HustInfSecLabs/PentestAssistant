from semantic_kernel.skill_definition import (sk_function,
                                              sk_function_context_parameter)
from semantic_kernel.orchestration.sk_context import SKContext

'''
    A content management system (CMS) manages the creation and modification of digital content. 
    It typically supports multiple users in a collaborative environment. Some noteable examples are: 
    WordPress, Joomla, Drupal etc.
    用来自动化扫描CMS相关漏洞
'''
class Cmseek:
    # Function1: 默认CMS扫描
    @sk_function(
        description=
        "full scan using large plugin lists including Wordpress, Joomla or Drupal",
        name="cmseek_scan_default",
    )
    @sk_function_context_parameter(
        description="target url address must be with http or https prefixes",#注意这里的target须带上http或https前缀
        name="target",
    )
    def tplmap_scan_default(self, context: SKContext) -> str:
        print_str = f"cmseek -u {context['target']} --batch"
        return print_str

    # Function2: Scan example.com CMS using a random user-Agent,例如：python3 cmseek.py -u example.com -r
    @sk_function(
        description=
        "Scan example.com using a random user-Agent",
        name="cmseek_scan_randomagent",
    )
    @sk_function_context_parameter(
        description="target url address must be with http or https prefixes",
        name="target",
    )
    def cmseek_scan_randomagent(self, context: SKContext) -> str:
        print_str = f"cmseek -u {context['target']} -r"
        return print_str

    # Function3:Scan example.com CMS using a specific user-Agent,例如：python3 cmseek.py -u example.com --user-agent Mozilla 5.
    @sk_function(
        description=
        "Scan example.com using a spcific user-Agent",
        name="cmseek_scan_Agent",
    )
    @sk_function_context_parameter(
        description="target url address must be with http or https prefixes",
        name="target",
    )
    @sk_function_context_parameter(
        description="Specify a custom user agent",
        name="useragent",
    )
    def cmseek_scan_Agent(self, context: SKContext) -> str:
        print_str = f"cmseek -u {context['target']} --user-agent {context['useragent']}"
        return print_str

    #   Function4: Scan example.com CMS Skips all redirects and tests the input target(s)
    @sk_function(
        description=
        "Scan example.com and Skips all redirects and tests the input target(s)",
        name="cmseek_scan_follow_redirect",
    )
    @sk_function_context_parameter(
        description="target url address must be with http or https prefixes",
        name="target",
    )
    def cmseek_scan_follow_redirect(self,context: SKContext) -> str:
        print_str = f"cmseek -u {context['target']} --no-redirect"
        return print_str

    # Function5:模糊测试，在xss漏洞利用方面进行模糊参数测试绕过waf eg：python xsstrike.py -u "http://example.com/search.php?q=query" --fuzzer
    @sk_function(
        description=
        " The fuzzer is meant to test filters and Web Application Firewalls. It is painfully slow because it sends randomly* delay requests and the delay can be up to 30 seconds. ",
        name="xss_fuzzing_test",
    )
    @sk_function_context_parameter(
        description="target url address",
        name="target",
    )
    def xss_fuzzing_test(self, context: SKContext) -> str:
        print_str = f"xsstrike -u {context['target']} --fuzzer "
        return print_str

from semantic_kernel.skill_definition import (
    sk_function,
    sk_function_context_parameter,
)
from semantic_kernel.orchestration.sk_context import SKContext


class Dirsearch:

    @sk_function(
        description="对网站或地址进行基本的域名枚举。",
        name="enumDNS")
    @sk_function_context_parameter(description="Target ip or hostname", name="url")

    def enumDNS(self, context: SKContext) -> str:
        print_str = f"dnsenum {context['url']}"
        return print_str
    
    #split

    @sk_function(
        description="对网站或地址进行基本的域名枚举，并且使用whois查询显示注册信息。",
        name="enumDNSWhois")
    @sk_function_context_parameter(description="Target ip or hostname", name="url")

    def enumDNSWhois(self, context: SKContext) -> str:
        print_str = f"dnsenum --whois {context['url']}"
        return print_str
    
    #split

    @sk_function(
        description="对网站或地址进行递归地域名枚举，直到找不到更多的子域名。",
        name="enumDNSRecurse")
    @sk_function_context_parameter(description="Target ip or hostname", name="url")

    def enumDNSRecurse(self, context: SKContext) -> str:
        print_str = f"dnsenum --recurse --enum {context['url']}"
        return print_str
    
    #split

    @sk_function(
        description="对网站或地址进行递归地域名枚举，并指定一个DNS服务器。",
        name="enumDNSServer")
    @sk_function_context_parameter(description="Target ip or hostname", name="url")
    @sk_function_context_parameter(description="指定的DNS服务器", name="server")

    def enumDNSServer(self, context: SKContext) -> str:
        print_str = f"dnsenum --dnsserver {context['server']} {context['url']}"
        return print_str
    
    #split
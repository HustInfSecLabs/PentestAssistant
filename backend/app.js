const createError = require('http-errors');
const express = require('express');
const expressWs = require('express-ws');
const mongoose = require('mongoose');

const { middleware } = require('./middleware');
const { router: vulnRouter } = require('./routes/vuln');
const { router: scanRouter } = require('./routes/scan');
const { router: aiRouter } = require('./routes/ai');

const app = express();


// view engine setup
// app.set('views', path.join(__dirname, 'views'));
// app.set('view engine', 'pug');
const initRouter = async () => {
  // 连接数据库
  await mongoose.connect('mongodb://pentest:pentest@127.0.0.1/pentest?authSource=admin');
  // 设置全局中间件
  app.use(middleware);
  // 设置路由
  app.use('/api/vulns', vulnRouter);
  app.use('/api/scans', scanRouter);
  app.use('/api/ai', aiRouter);

  // 旧的扫描接口
  // app.use('/api/crawl', crawlRouter);
  // app.use('/api/scan', oldScanRouter);

  // catch 404 and forward to error handler
  app.use(function (req, res, next) {
    next(createError(404));
  });

  // error handler
  app.use(function (err, req, res, next) {
    // set locals, only providing error in development
    res.locals.message = err.message;
    res.locals.error = req.app.get('env') === 'development' ? err : {};
    // render the error page
    res.status(err.status || 500);
    res.send(err.message);
  });
};
(async () => {
  await initRouter();
})();
module.exports = app;

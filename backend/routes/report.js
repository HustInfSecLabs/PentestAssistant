const express = require('express');
const { param, validationResult } = require('express-validator');
const path = require('path');
const { Scan } = require(path.resolve(__dirname, '../utils/db'));
const router = express.Router();

/**
 * 获得所有报告的基本信息列表
 */
router.get('/', [], (req, res) => {
  const reportList = [];
  // 获取所有扫描报告的基本信息列表
  Scan.find().then(scans => {
    const scanReportList = [];
    scans.forEach(scan => {
      if (scan.result) {
        scanReportList.push({
          reportId: scan.result._id,
          taskId: scan._id,
          name: scan.result.name,
          type: 'scan',
          createTime: scan.result.createTimeFormat
        });
      }
    });
    reportList.push(...scanReportList);
    res.json({ reports: reportList });
  }).catch(err => {
    // 获取失败，其他错误
    res.status(500).json({ msg: '获取报告信息出错：' + err.message });
  });
});

/**
 * 获得一个扫描报告的详细信息
 */
router.get('/scans/:scanId', [
  param('scanId').notEmpty().withMessage('任务ID不能为空').isMongoId().withMessage((wrongId) => `报告ID格式不正确: ${wrongId}`)
], (req, res) => {
  // 验证参数
  const errors = validationResult(req);
  if (!errors.isEmpty()) {
    return res.status(400).json({ msg: errors.array()[0].msg });
  }

  // 获取报告
  Scan.findById(req.params.scanId).then(scan => {
    // 获取成功
    if (!scan || !scan.result) {
      res.status(404).json({ msg: `报告不存在: ${req.params.scanId}` });
    } else {
      res.json(scan.result);
    }
  }).catch(err => {
    // 获取失败，其他错误
    res.status(500).json({ msg: '获取报告信息出错：' + err.message });
  });
});

module.exports = { router };

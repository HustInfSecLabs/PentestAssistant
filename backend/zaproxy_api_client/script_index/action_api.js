const axios = require('axios');
const { BASE_URL, apikey } = require('../config');

class ZAPScriptAction {
  /**
   * @description 添加脚本
   * @param {string} scriptName 脚本名
   * @param {string} scriptType 脚本类型
   * @param {string} scriptEngine 脚本引擎
   * @param {string} fileName 文件名
   * @param {string} scriptDescription 脚本描述
   * @param {string} charset 字符集
   * @returns {Promise<String>} OK
   */
  loadScript = async (scriptName, scriptType, scriptEngine, fileName, scriptDescription = '', charset = '') => {
    return axios.get(
      `${BASE_URL}/JSON/script/action/load/?apikey=${apikey}&scriptName=${scriptName}&scriptType=${scriptType}&scriptEngine=${scriptEngine}&fileName=${fileName}&scriptDescription=${scriptDescription}&charset=${charset}`
    );
  };

  /**
   * @description 删除脚本
   * @param {string} scriptName 脚本名
   * @returns {Promise<String>} OK
   */
  removeScript = async (scriptName) => {
    return await axios.get(
      `${BASE_URL}/JSON/script/action/remove/?apikey=${apikey}&scriptName=${scriptName}`
    );
  };

  /**
   * @description 禁用脚本
   * @param {string} scriptName 脚本名
   * @returns {Promise<String>} OK
   */
  disableScript = async (scriptName) => {
    return await axios.get(
      `${BASE_URL}/JSON/script/action/disable/?apikey=${apikey}&scriptName=${scriptName}`
    );
  };

  /**
   * @description 启用脚本
   * @param {string} scriptName 脚本名
   * @returns {Promise<String>} OK
   */
  enableScript = async (scriptName) => {
    return await axios.get(
      `${BASE_URL}/JSON/script/action/enable/?apikey=${apikey}&scriptName=${scriptName}`
    );
  };
}

module.exports = ZAPScriptAction;

const runTest = async () => {
  const client = new ZAPScriptAction();
};

const ALL_CHECKS_OLD = {
  PATH_TRAVERSAL: { name: 'Path Traversal', id: 6 },
  REMOTE_FILE_INCLUSION: { name: 'Remote File Inclusion', id: 7 },
  SOURCE_CODE_DISCLOSURE_WEB_INF_FOLDER: { name: 'Source Code Disclosure - /WEB-INF folder', id: 10045 },
  HEARTBLEED_OPENSSL_VULNERABILITY: { name: 'Heartbleed OpenSSL Vulnerability', id: 20015 },
  SOURCE_CODE_DISCLOSURE_CVE_2012_1823: { name: 'Source Code Disclosure - CVE-2012-1823', id: 20017 },
  REMOTE_CODE_EXECUTION_CVE_2012_1823: { name: 'Remote Code Execution - CVE-2012-1823', id: 20018 },
  EXTERNAL_REDIRECT: { name: 'External Redirect', id: 20019 },
  SERVER_SIDE_INCLUDE: { name: 'Server Side Include', id: 40009 },
  CROSS_SITE_SCRIPTING_REFLECTED: { name: 'Cross Site Scripting (Reflected)', id: 40012 },
  CROSS_SITE_SCRIPTING_PERSISTENT: { name: 'Cross Site Scripting (Persistent)', id: 40014 },
  SQL_INJECTION: { name: 'SQL Injection', id: 40018 },
  SQL_INJECTION_MYSQL: { name: 'SQL Injection - MySQL', id: 40019 },
  SQL_INJECTION_HYPERSONIC_SQL: { name: 'SQL Injection - Hypersonic SQL', id: 40020 },
  SQL_INJECTION_ORACLE: { name: 'SQL Injection - Oracle', id: 40021 },
  SQL_INJECTION_POSTGRESQL: { name: 'SQL Injection - PostgreSQL', id: 40022 },
  SQL_INJECTION_SQLITE: { name: 'SQL Injection - SQLite', id: 40024 },
  CROSS_SITE_SCRIPTING_DOM_BASED: { name: 'Cross Site Scripting (DOM Based)', id: 40026 },
  SQL_INJECTION_MSSQL: { name: 'SQL Injection - MsSQL', id: 40027 },
  LOG4SHELL: { name: 'Log4Shell', id: 40043 },
  SPRING4SHELL: { name: 'Spring4Shell', id: 40045 },
  SERVER_SIDE_CODE_INJECTION: { name: 'Server Side Code Injection', id: 90019 },
  REMOTE_OS_COMMAND_INJECTION: { name: 'Remote OS Command Injection', id: 90020 },
  XPATH_INJECTION: { name: 'XPath Injection', id: 90021 },
  XML_EXTERNAL_ENTITY_ATTACK: { name: 'XML External Entity Attack', id: 90023 },
  GENERIC_PADDING_ORACLE: { name: 'Generic Padding Oracle', id: 90024 },
  CLOUD_METADATA_POTENTIALLY_EXPOSED: { name: 'Cloud Metadata Potentially Exposed', id: 90034 },
  SERVER_SIDE_TEMPLATE_INJECTION: { name: 'Server Side Template Injection', id: 90035 },
  SERVER_SIDE_TEMPLATE_INJECTION_BLIND: { name: 'Server Side Template Injection (Blind)', id: 90036 },
  DIRECTORY_BROWSING: { name: 'Directory Browsing', id: 0 },
  BUFFER_OVERFLOW: { name: 'Buffer Overflow', id: 30001 },
  FORMAT_STRING_ERROR: { name: 'Format String Error', id: 30002 },
  CRLF_INJECTION: { name: 'CRLF Injection', id: 40003 },
  PARAMETER_TAMPERING: { name: 'Parameter Tampering', id: 40008 },
  ELMAH_INFORMATION_LEAK: { name: 'ELMAH Information Leak', id: 40028 },
  TRACE_AXD_INFORMATION_LEAK: { name: 'Trace.axd Information Leak', id: 40029 },
  HTACCESS_INFORMATION_LEAK: { name: '.htaccess Information Leak', id: 40032 },
  ENV_INFORMATION_LEAK: { name: '.env Information Leak', id: 40034 },
  HIDDEN_FILE_FINDER: { name: 'Hidden File Finder', id: 40035 },
  SPRING_ACTUATOR_INFORMATION_LEAK: { name: 'Spring Actuator Information Leak', id: 40042 },
  XSLT_INJECTION: { name: 'XSLT Injection', id: 90017 },
  GET_FOR_POST: { name: 'GET for POST', id: 10058 },
  USER_AGENT_FUZZER: { name: 'User Agent Fuzzer', id: 10104 },
  CROSS_SITE_SCRIPTING_PERSISTENT_PRIME: { name: 'Cross Site Scripting (Persistent) - Prime', id: 40016 },
  CROSS_SITE_SCRIPTING_PERSISTENT_SPIDER: { name: 'Cross Site Scripting (Persistent) - Spider', id: 40017 },
  SCRIPT_ACTIVE_SCAN_RULES: { name: 'Script Active Scan Rules', id: 50000 },
  SOURCE_CODE_DISCLOSURE_GIT: { name: 'Source Code Disclosure - Git ', id: 41 },
  SOURCE_CODE_DISCLOSURE_FILE_INCLUSION: { name: 'Source Code Disclosure - File Inclusion', id: 43 },
  REMOTE_CODE_EXECUTION_SHELL_SHOCK: { name: 'Remote Code Execution - Shell Shock', id: 10048 },
  HTTPOXY_PROXY_HEADER_MISUSE: { name: 'Httpoxy - Proxy Header Misuse', id: 10107 },
  CROSS_DOMAIN_MISCONFIGURATION: { name: 'Cross-Domain Misconfiguration', id: 20016 },
  SESSION_FIXATION: { name: 'Session Fixation', id: 40013 },
  OUT_OF_BAND_XSS: { name: 'Out of Band XSS', id: 40031 },
  SERVER_SIDE_REQUEST_FORGERY: { name: 'Server Side Request Forgery', id: 40046 },
  TEXT4SHELL_CVE_2022_42889: { name: 'Text4shell (CVE-2022-42889)', id: 40047 },
  EXPRESSION_LANGUAGE_INJECTION: { name: 'Expression Language Injection', id: 90025 },
  SOAP_ACTION_SPOOFING: { name: 'SOAP Action Spoofing', id: 90026 },
  SOAP_XML_INJECTION: { name: 'SOAP XML Injection', id: 90029 },
  SOURCE_CODE_DISCLOSURE_SVN: { name: 'Source Code Disclosure - SVN', id: 42 },
  RELATIVE_PATH_CONFUSION: { name: 'Relative Path Confusion', id: 10051 },
  BACKUP_FILE_DISCLOSURE: { name: 'Backup File Disclosure', id: 10095 },
  HTTP_ONLY_SITE: { name: 'HTTP Only Site', id: 10106 },
  ANTI_CSRF_TOKENS_CHECK: { name: 'Anti-CSRF Tokens Check', id: 20012 },
  INTEGER_OVERFLOW_ERROR: { name: 'Integer Overflow Error', id: 30003 },
  PROXY_DISCLOSURE: { name: 'Proxy Disclosure', id: 40025 },
  BYPASSING_403: { name: 'Bypassing 403', id: 40038 },
  CORS_HEADER: { name: 'CORS Header', id: 40040 },
  EXPONENTIAL_ENTITY_EXPANSION: { name: 'Exponential Entity Expansion (Billion Laughs Attack)', id: 40044 },
  INSECURE_HTTP_METHOD: { name: 'Insecure HTTP Method', id: 90028 },
  HTTPS_CONTENT_AVAILABLE_VIA_HTTP: { name: 'HTTPS Content Available via HTTP', id: 10047 },
  HTTP_PARAMETER_POLLUTION: { name: 'HTTP Parameter Pollution', id: 20014 },
  POSSIBLE_USERNAME_ENUMERATION: { name: 'Possible Username Enumeration', id: 40023 },
  COOKIE_SLACK_DETECTOR: { name: 'Cookie Slack Detector', id: 90027 }
};

const ALL_CHECKS = {
  PATH_TRAVERSAL: { name: 'Path Traversal', id: 6 },
  REMOTE_FILE_INCLUSION: { name: 'Remote File Inclusion', id: 7 },
  SOURCE_CODE_DISCLOSURE_WEB_INF_FOLDER: { name: 'Source Code Disclosure - /WEB-INF folder', id: 10045 },
  HEARTBLEED_OPENSSL_VULNERABILITY: { name: 'Heartbleed OpenSSL Vulnerability', id: 20015 },
  SOURCE_CODE_DISCLOSURE_CVE_2012_1823: { name: 'Source Code Disclosure - CVE-2012-1823', id: 20017 },
  REMOTE_CODE_EXECUTION_CVE_2012_1823: { name: 'Remote Code Execution - CVE-2012-1823', id: 20018 },
  EXTERNAL_REDIRECT: { name: 'External Redirect', id: 20019 },
  SERVER_SIDE_INCLUDE: { name: 'Server Side Include', id: 40009 },
  CROSS_SITE_SCRIPTING_REFLECTED: { name: 'Cross Site Scripting (Reflected)', id: 40012 },
  CROSS_SITE_SCRIPTING_PERSISTENT: { name: 'Cross Site Scripting (Persistent)', id: 40014 },
  SQL_INJECTION: { name: 'SQL Injection', id: 40018 },
  SQL_INJECTION_MYSQL: { name: 'SQL Injection - MySQL', id: 40019 },
  SQL_INJECTION_HYPERSONIC_SQL: { name: 'SQL Injection - Hypersonic SQL', id: 40020 },
  SQL_INJECTION_ORACLE: { name: 'SQL Injection - Oracle', id: 40021 },
  SQL_INJECTION_POSTGRESQL: { name: 'SQL Injection - PostgreSQL', id: 40022 },
  SQL_INJECTION_SQLITE: { name: 'SQL Injection - SQLite', id: 40024 },
  CROSS_SITE_SCRIPTING_DOM_BASED: { name: 'Cross Site Scripting (DOM Based)', id: 40026 },
  SQL_INJECTION_MSSQL: { name: 'SQL Injection - MsSQL', id: 40027 },
  LOG4SHELL: { name: 'Log4Shell', id: 40043 },
  SPRING4SHELL: { name: 'Spring4Shell', id: 40045 },
  SERVER_SIDE_CODE_INJECTION: { name: 'Server Side Code Injection', id: 90019 },
  REMOTE_OS_COMMAND_INJECTION: { name: 'Remote OS Command Injection', id: 90020 },
  XPATH_INJECTION: { name: 'XPath Injection', id: 90021 },
  XML_EXTERNAL_ENTITY_ATTACK: { name: 'XML External Entity Attack', id: 90023 },
  GENERIC_PADDING_ORACLE: { name: 'Generic Padding Oracle', id: 90024 },
  CLOUD_METADATA_POTENTIALLY_EXPOSED: { name: 'Cloud Metadata Potentially Exposed', id: 90034 },
  SERVER_SIDE_TEMPLATE_INJECTION: { name: 'Server Side Template Injection', id: 90035 },
  SERVER_SIDE_TEMPLATE_INJECTION_BLIND: { name: 'Server Side Template Injection (Blind)', id: 90036 },
  DIRECTORY_BROWSING: { name: 'Directory Browsing', id: 0 },
  BUFFER_OVERFLOW: { name: 'Buffer Overflow', id: 30001 },
  FORMAT_STRING_ERROR: { name: 'Format String Error', id: 30002 },
  CRLF_INJECTION: { name: 'CRLF Injection', id: 40003 },
  PARAMETER_TAMPERING: { name: 'Parameter Tampering', id: 40008 },
  ELMAH_INFORMATION_LEAK: { name: 'ELMAH Information Leak', id: 40028 },
  TRACE_AXD_INFORMATION_LEAK: { name: 'Trace.axd Information Leak', id: 40029 },
  HTACCESS_INFORMATION_LEAK: { name: '.htaccess Information Leak', id: 40032 },
  ENV_INFORMATION_LEAK: { name: '.env Information Leak', id: 40034 },
  HIDDEN_FILE_FINDER: { name: 'Hidden File Finder', id: 40035 },
  SPRING_ACTUATOR_INFORMATION_LEAK: { name: 'Spring Actuator Information Leak', id: 40042 },
  XSLT_INJECTION: { name: 'XSLT Injection', id: 90017 },
  GET_FOR_POST: { name: 'GET for POST', id: 10058 },
  USER_AGENT_FUZZER: { name: 'User Agent Fuzzer', id: 10104 },
  CROSS_SITE_SCRIPTING_PERSISTENT_PRIME: { name: 'Cross Site Scripting (Persistent) - Prime', id: 40016 },
  CROSS_SITE_SCRIPTING_PERSISTENT_SPIDER: { name: 'Cross Site Scripting (Persistent) - Spider', id: 40017 },
  SCRIPT_ACTIVE_SCAN_RULES: { name: 'Script Active Scan Rules', id: 50000 },
  SOAP_ACTION_SPOOFING: { name: 'SOAP Action Spoofing', id: 90026 },
  SOAP_XML_INJECTION: { name: 'SOAP XML Injection', id: 90029 }
};

const filterCheck = (arr) => {
  return Object.entries(ALL_CHECKS)
    .filter((obj) => arr.includes(obj[0]))
    .map((obj) => obj[1].id);
};

const SQL_INJECTION = filterCheck([
  'SQL_INJECTION',
  'SQL_INJECTION_MYSQL',
  'SQL_INJECTION_HYPERSONIC_SQL',
  'SQL_INJECTION_ORACLE',
  'SQL_INJECTION_POSTGRESQL',
  'SQL_INJECTION_SQLITE',
  'SQL_INJECTION_MSSQL'
]);

const XSS = filterCheck([
  'CROSS_SITE_SCRIPTING_REFLECTED',
  'CROSS_SITE_SCRIPTING_PERSISTENT',
  'CROSS_SITE_SCRIPTING_DOM_BASED',
  'CROSS_SITE_SCRIPTING_PERSISTENT_PRIME',
  'CROSS_SITE_SCRIPTING_PERSISTENT_SPIDER',
  'OUT_OF_BAND_XSS'
]);

const CMD_EXECUTION = filterCheck([
  'REMOTE_CODE_EXECUTION_CVE_2012_1823',
  'REMOTE_CODE_EXECUTION_SHELL_SHOCK',
  'SERVER_SIDE_CODE_INJECTION',
  'REMOTE_OS_COMMAND_INJECTION',
  'SERVER_SIDE_TEMPLATE_INJECTION',
  'SERVER_SIDE_TEMPLATE_INJECTION_BLIND',
  'LOG4SHELL',
  'SPRING4SHELL',
  'TEXT4SHELL_CVE_2022_42889'
]);

const REQUEST_FORGERY = filterCheck([
  'SERVER_SIDE_REQUEST_FORGERY',
  'ANTI_CSRF_TOKENS_CHECK'
]);

const XML = filterCheck([
  'XPATH_INJECTION',
  'XML_EXTERNAL_ENTITY_ATTACK',
  'SOAP_XML_INJECTION'
]);

const FILE_DIRECTORY = filterCheck([
  'REMOTE_FILE_INCLUSION',
  'HIDDEN_FILE_FINDER',
  'SOURCE_CODE_DISCLOSURE_FILE_INCLUSION',
  'BACKUP_FILE_DISCLOSURE',
  'RELATIVE_PATH_CONFUSION',
  'DIRECTORY_BROWSING'
]);

const SOURCE_CODE = filterCheck([
  'SOURCE_CODE_DISCLOSURE_WEB_INF_FOLDER',
  'SOURCE_CODE_DISCLOSURE_GIT',
  'SOURCE_CODE_DISCLOSURE_SVN',
  'SOURCE_CODE_DISCLOSURE_CVE_2012_1823',
  'SOURCE_CODE_DISCLOSURE_FILE_INCLUSION'
]);

const SERVER_MISCONFIGURATION = filterCheck([
  'SERVER_SIDE_CODE_INJECTION',
  'SERVER_SIDE_TEMPLATE_INJECTION',
  'SERVER_SIDE_TEMPLATE_INJECTION_BLIND',
  'SERVER_SIDE_INCLUDE',
  'HEARTBLEED_OPENSSL_VULNERABILITY'
]);

const AUTH = filterCheck([
  'COOKIE_SLACK_DETECTOR',
  'POSSIBLE_USERNAME_ENUMERATION',
  'SESSION_FIXATION'

]);

const INFORMATION_LEAKAGE = filterCheck([
  'SOURCE_CODE_DISCLOSURE_WEB_INF_FOLDER',
  'SOURCE_CODE_DISCLOSURE_GIT',
  'SOURCE_CODE_DISCLOSURE_SVN',
  'SOURCE_CODE_DISCLOSURE_CVE_2012_1823',
  'SOURCE_CODE_DISCLOSURE_FILE_INCLUSION',
  'BACKUP_FILE_DISCLOSURE',
  'PROXY_DISCLOSURE',
  'ELMAH_INFORMATION_LEAK',
  'TRACE_AXD_INFORMATION_LEAK',
  'HTACCESS_INFORMATION_LEAK',
  'ENV_INFORMATION_LEAK',
  'HIDDEN_FILE_FINDER',
  'SPRING_ACTUATOR_INFORMATION_LEAK'
]);

const HTTP = filterCheck([
  'HTTPOXY_PROXY_HEADER_MISUSE',
  'HTTP_PARAMETER_POLLUTION',
  'HTTP_ONLY_SITE',
  'INSECURE_HTTP_METHOD',
  'HTTPS_CONTENT_AVAILABLE_VIA_HTTP',
  'USER_AGENT_FUZZER',
  'GET_FOR_POST',
  'ANTI_CSRF_TOKENS_CHECK',
  'CORS_HEADER',
  'COOKIE_SLACK_DETECTOR',
  'BYPASSING_403'
]);

const INJECTION = filterCheck([
  'SQL_INJECTION',
  'SQL_INJECTION_MYSQL',
  'SQL_INJECTION_HYPERSONIC_SQL',
  'SQL_INJECTION_ORACLE',
  'SQL_INJECTION_POSTGRESQL',
  'SQL_INJECTION_SQLITE',
  'SQL_INJECTION_MSSQL',
  'SERVER_SIDE_CODE_INJECTION',
  'REMOTE_OS_COMMAND_INJECTION',
  'XPATH_INJECTION',
  'SERVER_SIDE_TEMPLATE_INJECTION',
  'SERVER_SIDE_TEMPLATE_INJECTION_BLIND',
  'CRLF_INJECTION',
  'XSLT_INJECTION',
  'EXPRESSION_LANGUAGE_INJECTION',
  'SOAP_XML_INJECTION'
]);

const PHP = filterCheck([

]);

const OVERFLOW = filterCheck([
  'BUFFER_OVERFLOW'
]);

const GENERIC = Array.from(new Set([
  ...SQL_INJECTION,
  ...XSS,
  ...CMD_EXECUTION,
  ...REQUEST_FORGERY,
  ...XML,
  ...FILE_DIRECTORY,
  ...SOURCE_CODE,
  ...SERVER_MISCONFIGURATION,
  ...AUTH,
  ...INFORMATION_LEAKAGE,
  ...HTTP,
  ...INJECTION,
  ...PHP,
  ...OVERFLOW,
  ...filterCheck([
    'SCRIPT_ACTIVE_SCAN_RULES'
  ])
]));

const ALL = filterCheck(Object.keys(ALL_CHECKS));

module.exports = {
  SQL_INJECTION,
  XSS,
  CMD_EXECUTION,
  REQUEST_FORGERY,
  XML,
  FILE_DIRECTORY,
  SOURCE_CODE,
  SERVER_MISCONFIGURATION,
  AUTH,
  INFORMATION_LEAKAGE,
  HTTP,
  INJECTION,
  PHP,
  OVERFLOW,
  GENERIC,
  ALL
};

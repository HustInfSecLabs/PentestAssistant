/**
 * 创建分析计划页面。
 */
import React, { useEffect, useState } from 'react';
import { Button, Form, Input, message, Layout, Select, Row, Col, AutoComplete } from 'antd';
import { ZoomInOutlined } from '@ant-design/icons';
import { useNavigate, useSearchParams } from 'react-router-dom';
import ContentHeader from '../components/ContentHeader';
import mainStyle from '../MainContent.module.css';
import scanStyle from './Scan.module.css';
import { useStore } from '@/store';
import moment from 'moment';
import ScanAddProgress from './ScanAddProgress';

const ScanAdd = () => {
  const [searchParams] = useSearchParams();
  const { scanStore } = useStore();
  const [form] = Form.useForm();
  const [profiles, setProfiles] = useState([]);
  const [progressOpen, setProgressOpen] = useState(false);
  const [progressValues, setProgressValues] = useState({});
  const [taskStart, setTaskStart] = useState(false);
  const navigate = useNavigate();

  // const onFinish = (values) => {
  //   scanStore.addScan({
  //     name: values.name,
  //     target: values.target,
  //     profileId: values.profileId
  //   }).then(() => {
  //     message.success('新增扫描成功！');
  //     navigate('/scans');
  //   }).catch(err => {
  //     message.error(err?.response?.data?.msg ?? err.message);
  //   });
  // };

  const onFinish = (values) => {
    setProgressValues({
      name: values.name,
      target: values.target,
      profileId: values.profileId
    });
    setProgressOpen(visible => !visible);
    setTaskStart(true);
  };

  const onCreateTargetButtonClick = () => {
    navigate('/targets/add');
  };

  const onShowProfileButtonClick = () => {
    navigate('/scans/profiles?profileId=' + (form.getFieldValue('profileId') ?? ''));
  };


  const initProfiles = () => {
    scanStore.getScanProfiles().then(res => {
      setProfiles(res.profiles.map(profile => ({
        label: profile.name,
        value: profile.profileId
      })));
      form.setFieldsValue({ profileId: res?.profiles[0]?.profileId ?? '暂无配置' });
    }).catch(err => {
      message.error(err?.response?.data?.msg ?? err.message);
    });
  };

  const setTargetsQuery = () => {
    if (searchParams.has('targetId')) {
      form.setFieldsValue({ target: searchParams.get('targetId') });
    }
  };

  const defaultName = '扫描任务' + moment().format('-MMDDHHmm');

  useEffect(() => {
    initProfiles();
    setTargetsQuery();
  }, []);

  return (
    <Layout>
      <ContentHeader>
        <div type='caption'><ZoomInOutlined/> 新增扫描</div>
        <div type='operation'>

        </div>
      </ContentHeader>
      <Layout className={mainStyle.mainContent}>
        <Form
          labelCol={{ span: 4 }}
          wrapperCol={{ span: 14 }}
          initialValues={{ name: defaultName }}
          colon={false}
          layout="horizontal"
          onFinish={onFinish}
          form={form}
        >

          <Form.Item
            label=' '
            className={scanStyle.FormItemStyle}
          >
            <Row>
              <Col span={18}>
                <Form.Item
                  name="name"
                  label='任务名称：'
                  rules={[
                    { required: true, message: '请输入任务名称！' }
                  ]}
                >
                  <Input placeholder="请输入任务名称"/>
                </Form.Item>
              </Col>
            </Row>
            <Row>
              <Col span={18}>
                <Form.Item
                  name="target"
                  label='选择目标：'
                  rules={[
                    { required: true, message: '请选择需要扫描的目标！' }
                  ]}
                >
                  <AutoComplete
                    placeholder="输入需要扫描的目标"
                    allowClear
                    showSearch
                    filterOption={(input, option) =>
                      (option?.label ?? '').toLowerCase().includes(input.toLowerCase())
                    }
                  >
                  </AutoComplete>
                </Form.Item>
              </Col>
              <Col span={1}/>
              <Col span={4}>

              </Col>
            </Row>
          </Form.Item>

          <Form.Item
            label=" "
            className={scanStyle.FormItemStyle}
          >
            <Row>
              <Col span={18}>
                <Form.Item
                  name='profileId'
                  label='选择配置：'
                  rules={[
                    { required: true, message: '请选择配置文件！' }
                  ]}

                >
                  <Select
                    placeholder="选择扫描配置文件"
                    allowClear
                    showSearch
                    className={scanStyle.ProfileSelectStyle}
                    options={profiles}
                  />
                </Form.Item>
              </Col>
              <Col span={1}/>
              <Col span={4}>
                <Button type='primary' ghost onClick={onShowProfileButtonClick}>查看...</Button>
              </Col>
            </Row>
          </Form.Item>

          <Form.Item label=" ">
            <Button type="primary" htmlType="submit" icon={<ZoomInOutlined/>}>新建扫描并运行</Button>
          </Form.Item>

          <ScanAddProgress props={{ open: progressOpen, setOpen: setProgressOpen, ...progressValues, taskStart, setTaskStart }}/>
        </Form>
      </Layout>
    </Layout>
  );
};

export default ScanAdd;

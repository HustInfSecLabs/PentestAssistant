import { makeAutoObservable } from 'mobx';
import { http } from '@/utils';

class ScanStore {
  /**
   * 新接口
   */
  getScanList = async () => {
    return await http.get('/scans');
  };

  getScanContent = async (scanId) => {
    return await http.get(`/scans/${scanId}/details`);
  };

  addScan = async (values) => {
    return await http.post('/scans', values);
  };

  deleteScan = async (scanId) => {
    return await http.delete(`/scans/${scanId}`);
  };

  getRunningScan = async () => {
    return await http.get('/scans/running');
  };

  stopRunningScan = async () => {
    return await http.post('/scans/running/stop');
  };

  getScanProfiles = async () => {
    return await http.get('/scans/profiles');
  };

  getScanProfileContent = async (profileId) => {
    return await http.get(`/scans/profiles/${profileId}`);
  };

  addScanProfile = async (values) => {
    return await http.post('/scans/profiles', values);
  };

  updateScanProfile = async (profileId, values) => {
    return await http.put(`/scans/profiles/${profileId}`, values);
  };

  deleteScanProfile = async (profileId) => {
    return await http.delete(`/scans/profiles/${profileId}`);
  };

  /**
   * 旧接口
   */
  getProfiles = async () => {
    return await http.get('/scan/getProfiles');
  };

  getProfile = async (profileName) => {
    return await http.get(`/scan/getProfile?name=${profileName}`);
  };

  getScanList_old = async () => {
    return await http.get('/scan/getScanList');
  };

  newScan = async (values) => {
    return await http.post('/scan/newScan', values);
  };

  stopScan = async (values) => {
    return await http.post('/scan/stopScan', values);
  };

  getLogs = async () => {
    return await http.get('/scan/getLogs');
  };

  getStatus = async () => {
    return await http.get('/scan/status');
  };

  getScanDetails = async (scanId) => {
    return await http.get(`/scan/getScanDetails/?scanId=${scanId}`);
  };

  /**
   * 新接口
   */

  constructor () {
    makeAutoObservable(this);
  }
}

export default ScanStore;
